{"version":3,"sources":["api/index.js","store/products-reducer.js","components/DeleteProductModal.js","components/EditProductModal.js","components/CreateProductModal.js","pages/Products.js","components/Header.js","components/Preloader.js","components/CurrentProductDetails.js","pages/ProductDetail.js","App.js","store/store.js","index.js"],"names":["instance","axios","create","baseURL","productsAPI","get","a","response","data","productId","itemId","put","count","id","imageUrl","name","size","height","width","weight","update","delete","SET_ACTIVE_PRODUCT","SET_PRODUCTS","SET_PRODUCT","SET_UPDATED_PRODUCT","SET_IS_FETCHING","initialState","products","activeProduct","activeName","activeCount","isFetching","productsReducer","state","action","type","filter","product","map","find","getProducts","dispatch","getState","console","log","DeleteProductModal","React","useState","open","setOpen","useDispatch","handleClose","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogActions","deleteProduct","autoFocus","EditProductModal","currentAction","history","useHistory","useForm","register","handleSubmit","reset","DialogContent","DialogContentText","Grid","item","xs","sm","onSubmit","updateProduct","push","Typography","TextField","inputRef","required","label","fullWidth","margin","defaultValue","CreateProductModal","useSelector","length","createProduct","useStyles","makeStyles","theme","cardGrid","paddingBottom","spacing","maxWidth","cardContainer","marginBottom","marginTop","card","display","flexDirection","padding","textAlign","cardMedia","paddingTop","cardContent","flexGrow","justifyContent","cardActions","button","div","position","zIndex","Products","memo","classes","useEffect","Fragment","md","className","Container","container","index","lg","Card","CardMedia","image","CardContent","cardContent_item","CardActions","to","appBar","backgroundColor","icon","marginRight","Header","AppBar","Toolbar","fontSize","root","top","right","Preloader","CircularProgress","CurrentProductDetails","maxHeight","ProductDetail","Paper","elevation","style","alignItems","Divider","justify","comments","comment","date","description","App","component","fallback","exact","path","render","props","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92a82d24.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n  baseURL:\r\n    'https://listofproductsinforce-default-rtdb.europe-west1.firebasedatabase.app',\r\n})\r\n\r\nexport const productsAPI = {\r\n  get: async () => {\r\n    const response = await instance.get('/products.json')\r\n    return response.data\r\n  },\r\n\r\n  create: async (data, productId, itemId) => {\r\n    const response = await instance.put(`/products/${productId}.json`, {\r\n      count: data.count,\r\n      id: itemId,\r\n      imageUrl: data.imageUrl,\r\n      name: data.name,\r\n      size: {\r\n        height: data.height,\r\n        width: data.width,\r\n      },\r\n      weight: data.weight,\r\n    })\r\n\r\n    return response.data\r\n  },\r\n\r\n  update: async (data, productId, itemId) => {\r\n    const response = await instance.put(`/products/${productId}.json`, {\r\n      count: data.count,\r\n      id: itemId,\r\n      imageUrl: data.imageUrl,\r\n      name: data.name,\r\n      size: {\r\n        height: data.height,\r\n        width: data.width,\r\n      },\r\n      weight: data.weight,\r\n    })\r\n\r\n    return response.data\r\n  },\r\n  delete: async (id) => {\r\n    const response = await instance.delete(`/products/${id}.json`)\r\n\r\n    return response\r\n  },\r\n}\r\n","import { productsAPI } from '../api'\r\n\r\nconst SET_ACTIVE_PRODUCT = 'products-reducer/setActiveProduct'\r\nconst SET_PRODUCTS = 'products-reducer/setProducts'\r\nconst SET_PRODUCT = 'products-reducer/setProduct'\r\nconst SET_UPDATED_PRODUCT = 'products-reducer/setUpdatedProduct'\r\nconst SET_IS_FETCHING = 'products-reducer/setIsFetching'\r\n\r\nlet initialState = {\r\n  products: [],\r\n  activeProduct: null,\r\n  activeName: null,\r\n  activeCount: null,\r\n  isFetching: false,\r\n}\r\n\r\nconst productsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        products: [...action.products.filter((product) => product !== null)],\r\n      }\r\n    }\r\n\r\n    case SET_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        products: [...state.products, action.product],\r\n      }\r\n    }\r\n\r\n    case SET_UPDATED_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        products: [\r\n          ...state.products.map((product) => {\r\n            if (product.id === action.product.id) {\r\n              return action.product\r\n            } else {\r\n              return product\r\n            }\r\n          }),\r\n        ],\r\n        activeProduct: { ...action.product },\r\n      }\r\n    }\r\n\r\n    case SET_ACTIVE_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        activeProduct: {\r\n          ...state.products.find((product) => product.id === action.id),\r\n        },\r\n      }\r\n    }\r\n\r\n    case SET_IS_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default productsReducer\r\n\r\nexport const setActiveProduct = (id) => ({\r\n  type: SET_ACTIVE_PRODUCT,\r\n  id,\r\n})\r\n\r\nexport const setProducts = (products) => ({\r\n  type: SET_PRODUCTS,\r\n  products,\r\n})\r\n\r\nexport const setProduct = (product) => ({\r\n  type: SET_PRODUCT,\r\n  product,\r\n})\r\n\r\nexport const setUpdatedProduct = (product) => ({\r\n  type: SET_UPDATED_PRODUCT,\r\n  product,\r\n})\r\n\r\nexport const getProducts = () => {\r\n  return async (dispatch, getState) => {\r\n    let response = await productsAPI.get()\r\n\r\n    dispatch(setProducts(response))\r\n    console.log(response)\r\n  }\r\n}\r\n\r\nexport const createProduct = (data, productId, itemId) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await productsAPI.create(data, productId, itemId)\r\n\r\n    dispatch(setProduct(response))\r\n  }\r\n}\r\n\r\nexport const updateProduct = (data, productId, itemId) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await productsAPI.update(data, productId, itemId)\r\n\r\n    dispatch(setUpdatedProduct(response))\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await productsAPI.delete(id)\r\n    dispatch(getProducts())\r\n\r\n    console.log(response)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteProduct } from '../store/products-reducer'\r\n// import { useDispatch } from 'react-redux'\r\n// import { deleteCurrentPost } from '../redux/currentPost-reducer'\r\n\r\nexport const DeleteProductModal = ({ id }) => {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteProduct(id))\r\n\r\n    setOpen(false)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Delete\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {'Are you sure that you want to delete this product?'}\r\n        </DialogTitle>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleDelete} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            No\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateProduct } from '../store/products-reducer'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Grid, TextField, Typography } from '@material-ui/core'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport const EditProductModal = ({ currentAction, activeProduct }) => {\r\n  const [open, setOpen] = React.useState(false)\r\n  const history = useHistory()\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  let productId = activeProduct.id - 1\r\n  let itemId = activeProduct.id\r\n\r\n  const { register, handleSubmit, reset } = useForm({})\r\n\r\n  const dispatch = useDispatch()\r\n  const onSubmit = (data) => {\r\n    dispatch(updateProduct(data, productId, itemId))\r\n\r\n    console.log(data)\r\n    reset()\r\n    history.push('/')\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        {currentAction}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Grid item xs={12} sm={12}>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Typography>\r\n                  <b>{currentAction}</b>\r\n                </Typography>\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Product Name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.name}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Count\"\r\n                  name=\"count\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.count}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Image Url\"\r\n                  name=\"imageUrl\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.imageUrl}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Height\"\r\n                  name=\"height\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.size.height}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Width\"\r\n                  name=\"width\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.size.width}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Weight\"\r\n                  name=\"weight\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.weight}\r\n                />\r\n\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </form>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createProduct } from '../store/products-reducer'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Grid, TextField, Typography } from '@material-ui/core'\r\n\r\nexport const CreateProductModal = ({ currentAction }) => {\r\n  const [open, setOpen] = React.useState(false)\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const { products } = useSelector((state) => state.products)\r\n\r\n  let productId = products.length\r\n  let itemId = productId + 1\r\n\r\n  const { register, handleSubmit, reset } = useForm({})\r\n\r\n  const dispatch = useDispatch()\r\n  const onSubmit = (data) => {\r\n    dispatch(createProduct(data, productId, itemId))\r\n\r\n    console.log(data)\r\n    reset()\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Dialog open={open} onClose={handleClose}>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Grid item xs={12} sm={12}>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Typography>\r\n                  <b>{currentAction}</b>\r\n                </Typography>\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Product Name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.name}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Count\"\r\n                  name=\"count\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.count}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Image Url\"\r\n                  name=\"imageUrl\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.imageUrl}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Height\"\r\n                  name=\"height\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.size.height}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Width\"\r\n                  name=\"width\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.size.width}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Weight\"\r\n                  name=\"weight\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={activeProduct.weight}\r\n                />\r\n\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </form>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog> */}\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        {currentAction}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Grid item xs={12} sm={12}>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Typography>\r\n                  <b>{currentAction}</b>\r\n                </Typography>\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Product Name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={''}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Count\"\r\n                  name=\"count\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={''}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Image Url\"\r\n                  name=\"imageUrl\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={''}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Height\"\r\n                  name=\"height\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={''}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Width\"\r\n                  name=\"width\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={''}\r\n                />\r\n                <TextField\r\n                  inputRef={register({ required: true })}\r\n                  label=\"Weight\"\r\n                  name=\"weight\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  required={true}\r\n                  defaultValue={''}\r\n                />\r\n\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </form>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { useHistory } from 'react-router'\r\nimport { DeleteProductModal } from '../components/DeleteProductModal'\r\nimport { ProductModal } from '../components/EditProductModal'\r\nimport { getProducts, setActiveProduct } from '../store/products-reducer'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { CreateProductModal } from '../components/CreateProductModal'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingBottom: theme.spacing(8),\r\n    maxWidth: 'md',\r\n  },\r\n  cardContainer: {\r\n    marginBottom: theme.spacing(8),\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    margin: '0 auto',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '70%', // 16:9\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cardActions: {\r\n    margin: '0 auto',\r\n  },\r\n  button: {\r\n    textAlign: 'center',\r\n  },\r\n  div: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    paddingTop: '100px',\r\n  },\r\n}))\r\n\r\nexport const Products = React.memo(() => {\r\n  const classes = useStyles()\r\n\r\n  const { products } = useSelector((state) => state.products)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts())\r\n    console.log('render')\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sm={12} md={12}>\r\n        <div className={classes.div}></div>\r\n        <Container className={classes.cardGrid}>\r\n          <Grid className={classes.cardContainer} container={true} spacing={4}>\r\n            {products.map((product, index) => (\r\n              <Grid\r\n                key={product + index}\r\n                item={true}\r\n                xs={12}\r\n                sm={6}\r\n                md={6}\r\n                lg={4}\r\n              >\r\n                <Card className={classes.card}>\r\n                  {!product && (\r\n                    <CardMedia\r\n                      className={classes.cardMedia}\r\n                      image={\r\n                        'https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.jpg'\r\n                      }\r\n                    />\r\n                  )}\r\n                  {product && (\r\n                    <CardMedia\r\n                      className={classes.cardMedia}\r\n                      image={product.imageUrl}\r\n                    />\r\n                  )}\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography\r\n                      className={classes.cardContent_item}\r\n                      label=\"Product Name\"\r\n                      name=\"name\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      required={true}\r\n                    >\r\n                      <b>Name:{product.name}</b>\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.cardContent_item}\r\n                      label=\"Product Name\"\r\n                      name=\"name\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      required={true}\r\n                    >\r\n                      <b>Count:{product.count}</b>\r\n                    </Typography>\r\n                    <div>\r\n                      <Typography\r\n                        className={classes.cardContent_item}\r\n                        label=\"Product Name\"\r\n                        name=\"name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        required={true}\r\n                      >\r\n                        <b>Description:</b> Lorem ipsum, dolor sit amet\r\n                        consectetur adipisicing elit. Accusantium omnis cumque\r\n                        velit iusto tempora nam expedita facere ipsam quasi\r\n                        accusamus quia sed, neque amet iste perferendis sunt\r\n                        natus soluta dignissimos!\r\n                      </Typography>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions className={classes.cardActions}>\r\n                    <NavLink\r\n                      onClick={() => dispatch(setActiveProduct(product.id))}\r\n                      to={`/productDetails/${product.id}`}\r\n                    >\r\n                      {'details'}\r\n                    </NavLink>\r\n                    <DeleteProductModal id={product.id - 1} />\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <div className={classes.button}>\r\n            <CreateProductModal currentAction={'Create Product'} />\r\n          </div>\r\n        </Container>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n})\r\n","import { AppBar, makeStyles, Toolbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: '#2e333b',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport const Header = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <NavLink to=\"/\">\r\n            <HomeIcon className={classes.icon} fontSize=\"large\" />\r\n          </NavLink>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    right: '50%',\r\n    zIndex: 9999,\r\n  },\r\n}))\r\n\r\nexport default function Preloader() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingBottom: theme.spacing(8),\r\n    maxWidth: 'md',\r\n  },\r\n  cardContainer: {\r\n    marginBottom: theme.spacing(8),\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '70%', // 16:9\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(3),\r\n  },\r\n  cardContent_item: {\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  cardActions: {\r\n    margin: '0 auto',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n  div: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    paddingTop: '100px',\r\n  },\r\n}))\r\n\r\nexport const CurrentProductDetails = ({ activeProduct }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid item xs={5} sm={4}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.cardMedia}\r\n          image={activeProduct.imageUrl}\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography\r\n            className={classes.cardContent_item}\r\n            label=\"Product Name\"\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required={true}\r\n          >\r\n            Name:{activeProduct.name}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.cardContent_item}\r\n            label=\"Product Name\"\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required={true}\r\n          >\r\n            Count:{activeProduct.count}\r\n          </Typography>\r\n\r\n          <Typography\r\n            className={classes.cardContent_item}\r\n            label=\"Product Name\"\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required={true}\r\n          >\r\n            Height:{activeProduct.size.height}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.cardContent_item}\r\n            label=\"Product Name\"\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required={true}\r\n          >\r\n            Width:{activeProduct.size.width}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.cardContent_item}\r\n            label=\"Product Name\"\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required={true}\r\n          >\r\n            Weight:{activeProduct.weight}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { CurrentProductDetails } from '../components/CurrentProductDetails'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { EditProductModal, ProductModal } from '../components/EditProductModal'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(10),\r\n    maxHeight: '1200px',\r\n  },\r\n}))\r\n\r\nexport const ProductDetail = () => {\r\n  const classes = useStyles()\r\n\r\n  const { activeProduct } = useSelector((state) => state.products)\r\n\r\n  return (\r\n    <Grid container spacing={4} className={classes.root}>\r\n      <Grid item xs={12}>\r\n        <Paper elevation={7} style={{ padding: 10 }}>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\">Product Details</Typography>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <EditProductModal\r\n                activeProduct={activeProduct}\r\n                currentAction={'Edit'}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"center\" item>\r\n            <CurrentProductDetails activeProduct={activeProduct} />\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid container item xs={12} spacing={3}>\r\n        <Grid item xs>\r\n          <Typography variant=\"h5\">Comments:</Typography>\r\n        </Grid>\r\n        {activeProduct &&\r\n          activeProduct.comments?.map((comment) => (\r\n            <Grid item xs={12} key={comment.id}>\r\n              <Paper elevation={7} style={{ padding: 10 }}>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"caption\">\r\n                      Date: {comment.date}\r\n                    </Typography>\r\n                    <Divider />\r\n\r\n                    <Typography variant=\"subtitle2\">\r\n                      Description:{comment.description}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import './App.css'\nimport { Suspense } from 'react'\nimport { Products } from './pages/Products'\nimport { Header } from './components/Header'\nimport { Grid } from '@material-ui/core'\nimport Preloader from './components/Preloader'\nimport { ProductDetail } from './pages/ProductDetail'\nimport { Route, Switch } from 'react-router'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n\n      <Grid container={true} component=\"main\">\n        <Suspense fallback={<Preloader />}>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Products />} />\n            <Route\n              exact\n              path=\"/productDetails/:id?\"\n              render={(props) => <ProductDetail {...props} />}\n            />\n          </Switch>\n        </Suspense>\n      </Grid>\n    </>\n  )\n}\n\nexport default App\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport productsReducer from './products-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet rootReducer = combineReducers({\r\n  products: productsReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './App'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}